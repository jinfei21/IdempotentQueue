<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjfei.queue.mapper.TaskMapper">


	<resultMap  id="taskResult" type="com.yjfei.queue.common.Task">
		<result property="ID" column="id"  />
		<result property="status" column="task_status" />
		<result property="parentID" column="parentid"  />
		<result property="direction" column="run_direct"  />		
		<result property="businessType" column="business_type"/>
		<result property="lockTime" column="lock_time"/>
		<result property="params" column="params"/>
		<result property="remark" column="remark" />
		<result property="creator" column="creator"/>
		<result property="modifier" column="modifier"/>
		<result property="gmtCreated" column="gmt_created"/>
		<result property="gmtModified" column="gmt_modified"/>
	</resultMap>

	<insert id="insert" parameterType="com.yjfei.queue.common.Task" useGeneratedKeys="true" keyProperty="ID"  flushCache="true">
		insert into
		queue_task(task_status,parentid,run_direct,gmt_created,gmt_modified,creator,modifier,remark,params,business_type,lock_time)
		values(#{status},#{parentID},#{direction},#{gmtCreated},#{gmtModified},#{creator},#{modifier},#{remark},#{params},#{businessType},#{lockTime})
	</insert>
	
	<update id="setAllTaskToStatus" flushCache="true">
			update queue_task set task_status = #{0} where id != 0
	</update>

	<update id="updateByIDandReverseStatus" parameterType="com.yjfei.queue.common.Task" flushCache="true">
		update queue_task 
		<set>
		<if test="status != null">
        	task_status = #{status}, 
		</if>
		<if test="parentID != null" >
        	parentid = #{parentID}, 
		</if>
		<if test="direction != null" >
        	run_direct = #{direction}, 
		</if>
		<if test="params != null" >
        	params = #{params},         
		</if>
		<if test="remark != null" >
        	remark = #{remark},         
		</if>
		<if test="creator != null" >
        	creator = #{creator},         
		</if>
		<if test="modifier != null" >
        	modifier = #{modifier},         
		</if>
		<if test="gmtCreated != null" >
        	gmt_created = #{gmtCreated}, 
		</if>
		<if test="gmtModified != null" >
        	gmt_modified = #{gmtModified},         
		</if>
		<if test="businessType != null" >
        	business_type = #{businessType},         
		</if>
		<if test="lockTime != null" >
        	lock_time = #{lockTime},         
		</if>		
		</set>
		<where>
		 	id=#{ID} and task_status != #{status}
		</where>
	</update>
	
	<update id="updateStatusByID" flushCache="true">
		update queue_task set task_status = #{1} where id=#{0}
	</update>
	
	<update id="updateStatusByIDandStatus" flushCache="true">
		update queue_task set task_status = #{3},modifier=#{4},gmt_modified=#{5} where id=#{0} and task_status=#{1} and run_direct=#{2}
	</update>
	
	<update id="updateByID" flushCache="true">
		update queue_task 
		<set>
		<if test="status != null">
        	task_status = #{status}, 
		</if>
		<if test="parentID != null" >
        	parentid = #{parentID}, 
		</if>
		<if test="direction != null" >
        	run_direct = #{direction}, 
		</if>
		<if test="params != null" >
        	params = #{params},         
		</if>
		<if test="remark != null" >
        	remark = #{remark},         
		</if>
		<if test="creator != null" >
        	creator = #{creator},         
		</if>
		<if test="modifier != null" >
        	modifier = #{modifier},         
		</if>
		<if test="gmtCreated != null" >
        	gmt_created = #{gmtCreated}, 
		</if>
		<if test="gmtModified != null" >
        	gmt_modified = #{gmtModified},         
		</if>
		<if test="businessType != null" >
        	business_type = #{businessType},         
		</if>
		<if test="lockTime != null" >
        	lock_time = #{lockTime},         
		</if>	
		</set>
		<where>
		 	id=#{ID}
		</where>
	</update>
	
	<select id="listNonSuccessTask" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where task_status in('T','F','L') limit #{0},#{1}
	</select>
	
	<select id="listAll" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task limit #{0},#{1}
	</select>
	
	<select id="listByReverseStatus" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where task_status != #{0} limit #{1},#{2}
	</select>
	
	<select id="listByStatus" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where task_status = #{0} limit #{1},#{2}
	</select>
	
	<select id="listByParentID" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where parentid = #{0} limit #{1},#{2}
	</select>
	
	<select id="listCountByParentID" flushCache="true" useCache="false" resultType="java.lang.Integer" >
		select count(*) from queue_task where parentid = #{0}
	</select>
	
	<select id="listNonSuccessTaskByParentID" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where parentid = #{0} and task_status in('T','F','L') limit #{1},#{2}
	</select>
	
	<select id="listNonSuccessTaskCountByParentID" flushCache="true" useCache="false" resultType="java.lang.Integer" >
		select count(*) from queue_task where parentid = #{0} and task_status in('T','F','L') 
	</select>
	
	<select id="listByCreateDate" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where gmt_created between #{0} and #{1} limit #{2},#{3}
	</select>
	
	<select id="listByModifyDate" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where gmt_modified between #{0} and #{1} limit #{2},#{3}
	</select>
	
	<select id="listByCreateUser" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where creator = #{0} limit #{1},#{2}
	</select>
	
	<select id="listByModifyUser" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where modifier = #{0} limit #{1},#{2}
	</select>
	
	<select id="findByID" flushCache="true" useCache="false" resultMap="taskResult" >
		select * from queue_task where id = #{0}
	</select>

	<delete id="deleteByID" flushCache="true">
		delete from queue_task where id = #{0}
	</delete>
	
	<delete id="deleteByDate" flushCache="true">
		delete from queue_task where gmt_modified between #{0} and #{1}
	</delete>

	<delete id="deleteByDateAndStatus" flushCache="true">
		delete from queue_task where task_status = #{0} and gmt_modified between #{1} and #{2} 
	</delete>
</mapper>  